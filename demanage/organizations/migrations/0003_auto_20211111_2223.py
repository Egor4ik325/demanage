# Generated by Django 3.1.13 on 2021-11-11 19:23

from django.apps.registry import Apps
from django.db import migrations
from django.db.backends.base.schema import BaseDatabaseSchemaEditor


def create_groups(apps: Apps, schema_editor: BaseDatabaseSchemaEditor):
    """
    Create permission groups for application-wide usage.
    """
    Group = apps.get_model("auth", "Group")
    ContentType = apps.get_model("contenttypes", "contenttype")
    Organization = apps.get_model("organizations.organization")
    Permission = apps.get_model("auth", "Permission")

    # Create group (initial migration) or get created (duplicate migration)
    organization_representatives_group, created = Group.objects.get_or_create(
        name="Organization Representatives"
    )

    # Get organization type (for generic permission)
    organization_content_type = ContentType.objects.get_for_model(Organization)

    # Add group permissions (if not already added)
    can_add_organization, _ = Permission.objects.get_or_create(
        codename="add_organization", content_type=organization_content_type
    )
    organization_representatives_group.permissions.add(can_add_organization)


class Migration(migrations.Migration):

    # For creating permissions needs auth_permission and contenttypes_contenttype
    dependencies = [
        ("contenttypes", "__latest__"),
        ("auth", "__latest__"),
        ("organizations", "0002_auto_20211107_1326"),
    ]

    operations = [migrations.RunPython(create_groups)]
